#!/bin/sh

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

videos_dir="$HOME/Videos"
music_dir="$HOME/Music"
date_fmt='%y-%m-%d_%H-%M-%S'

# Utils

getdim() { xrandr | grep -oP '(?<=current ).*(?=,)' | tr -d ' '; }

updateicon() {
	echo "$1" >/tmp/recordingicon
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
}

get_selection() {
	slop \
		--bordersize 4.0 \
		--padding 0.0 \
		--tolerance 20.0 \
		--color=100.0,0.0,0.0,0.3 \
		--nodrag \
		--highlight \
		--nodecorations=2 \
		--format "%x %y %w %h"
}

# Recording Modes

videoselected() {
	# POSIX-compliant.
	set -- $(get_selection)
	X=$1
	Y=$2
	W=$3
	H=$4

	output_path="$videos_dir/box-$(date "+$date_fmt").mp4"

	ffmpeg \
		-f x11grab \
		-framerate 30 \
		-video_size "$W"x"$H" \
		-i :0.0+"$X,$Y" \
		-c:v libx264 -qp 0 -r 30 \
		"$output_path" &

	echo "$output_path" >/tmp/recordingpath
	echo $! >/tmp/recordingpid
	updateicon "‚è∫Ô∏è"
}

video() {
	ffmpeg \
		-f x11grab \
		-framerate 30 \
		-s "$(getdim)" \
		-i "$DISPLAY" \
		-c:v libx264 -qp 0 -r 30 \
		"$HOME/video-$(date "+$date_fmt").mp4" &

	echo $! >/tmp/recordingpid
	updateicon "‚è∫Ô∏è"
}

screencast() {
	ffmpeg -y \
		-f x11grab \
		-framerate 30 \
		-s "$(getdim)" \
		-i "$DISPLAY" \
		-r 24 \
		-use_wallclock_as_timestamps 1 \
		-f alsa -thread_queue_size 1024 -i default \
		-c:v h264 \
		-crf 0 -preset ultrafast -c:a aac \
		"$HOME/screencast-$(date "+$date_fmt").mp4" &

	echo $! >/tmp/recordingpid
	updateicon "‚è∫Ô∏èüéôÔ∏è"
}

webcamhidef() {
	ffmpeg \
		-f v4l2 \
		-i /dev/video0 \
		-video_size 1920x1080 \
		"$HOME/webcam-$(date "+$date_fmt").mp4" &

	echo $! >/tmp/recordingpid
	updateicon "üé•"
}

webcam() {
	ffmpeg \
		-f v4l2 \
		-i /dev/video0 \
		-video_size 640x480 \
		"$HOME/webcam-$(date "+$date_fmt").mp4" &

	echo $! >/tmp/recordingpid
	updateicon "üé•"
}

audio() {
	ffmpeg \
		-f alsa -i default \
		-c:a flac \
		"$HOME/audio-$(date "+$date_fmt").flac" &

	echo $! >/tmp/recordingpid
	updateicon "üéôÔ∏è"
}

# Main

askrecording() {
	choices="\
video selected
video
screencast
audio
webcam
webcam (hi-def)"

	choice=$(printf "%s\n" "$choices" | dmenu -l -1 -i -p "Recording mode")

	case "$choice" in
		screencast) screencast ;;
		audio) audio ;;
		video) video ;;
		*selected) videoselected ;;
		webcam) webcam ;;
		"webcam (hi-def)") webcamhidef ;;
	esac
}

asktoend() {
	response=$(printf "Yes\\nNo" | dmenu -i -p "End active recording?") &&
		[ "$response" = "Yes" ] &&
		killrecording
}

case "$1" in
	screencast) screencast ;;
	audio) audio ;;
	video) video ;;
	*selected) videoselected ;;
	kill) killrecording ;;
	*) ([ -f /tmp/recordingpid ] &&
		asktoend &&
		notify-send "Recording saved" "Recording was saved at '$(sed "s|$HOME|~|g" /tmp/recordingpath)'." &&
		exit) || askrecording ;;
esac
